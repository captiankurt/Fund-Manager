{"version":3,"sources":["@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/Common/formElements/AppTextInput.js","@coremat/CmtTransitions/RevealEffect.js","@coremat/CmtRevealCard/index.js","routes/Dashboards/SelfManager/Registration/index.js","routes/Dashboards/SelfManager/onBoard/index.js","routes/Dashboards/SelfManager/index.js"],"names":["useStyles","makeStyles","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","heading","breadcrumbComponent","children","rest","classes","Box","className","clsx","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","items","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","root","flexWrap","contentArea","width","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","pageFull","PageContainer","breadcrumbs","restProps","Slide","in","direction","mountOnEnter","unmountOnExit","AppTextInput","type","name","id","fullWidth","size","value","onChange","helperText","error","prototype","PropTypes","string","bool","func","defaultProps","defaultStyle","transition","transitionStyles","entering","opacity","transform","entered","exiting","exited","RevealEffect","inProp","styleProp","style","timeout","React","isValidElement","props","Transition","state","childProps","cloneElement","revealHeader","justifyContent","padding","paddingTop","revealArea","backgroundColor","palette","background","paper","left","zIndex","boxSizing","CmtRevealCard","revealed","onClose","revealComponentTitle","titleProps","revealComponent","contentRef","createRef","useState","contentHeight","setContentHeight","useEffect","current","clientHeight","CmtCard","ref","flex","content","my","IconButton","onClick","divider","noBorder","border","inputGroup","textField","minWidth","borderTopRightRadius","borderBottomRightRadius","chip","margin","spacing","inputGroupAppend","marginRight","button","linkCopy","borderTopLeftRadius","borderBottomLeftRadius","successMsg","userIcon","iconBlock","register","a","Contracts","registerSelfPool","res","console","log","SelfManagerRegistration","invitations","setInvitations","invited","setInvited","username","setUsername","userAddress","setAddress","Accounts","getCurrentAccount","loadData","useRef","getNativeCoin","window","localStorage","getItem","sendInvitation","CmtCardContent","Fade","Link","href","Button","borderColor","borderRadius","Chip","onDelete","filter","handleChipDelete","placeholder","event","target","onKeyDown","split","length","some","trim","push","gutterBottom","mt","mr","disabled","revealCard","fade","primary","main","paddingLeft","paddingBottom","subTitileRoot","letterSpacing","RegisterSelfManager","setRevealed","CmtAdvCardContent","title","subTitle","subTitleProps","extraContent","alignCenter","rootPaper","lighten","marginTop","actionsContainer","resetContainer","SelfManagerRegister","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","step","getStepContent","Paper","square","elevation"],"mappings":"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","file":"static/js/8.8c66b806.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppTextInput = ({ type, name, id, fullWidth, size, value, onChange, helperText, variant, error, ...rest }) => {\r\n  return (\r\n    <TextField\r\n      {...rest}\r\n      type={type}\r\n      name={name}\r\n      id={id || name}\r\n      size={size}\r\n      fullWidth={fullWidth}\r\n      value={value}\r\n      variant={variant}\r\n      onChange={onChange}\r\n      error={error || helperText !== ''}\r\n      helperText={helperText}\r\n    />\r\n  );\r\n};\r\n\r\nAppTextInput.prototype = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.bool,\r\n};\r\n\r\nAppTextInput.defaultProps = {\r\n  type: 'text',\r\n  fullWidth: true,\r\n  size: 'small',\r\n  error: false,\r\n  helperText: '',\r\n};\r\n\r\nexport default AppTextInput;\r\n","import React, { cloneElement } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst defaultStyle = {\r\n  transition: `all 0.3s ease`,\r\n};\r\n\r\nconst transitionStyles = {\r\n  entering: { opacity: 1, transform: 'translateY(-100%)' },\r\n  entered: { opacity: 1, transform: 'translateY(-100%)' },\r\n  exiting: { opacity: 0, transform: 'translateY(0%)' },\r\n  exited: { opacity: 0, transform: 'translateY(0%)' },\r\n};\r\n\r\nconst RevealEffect = ({ in: inProp, style: styleProp, timeout, children }) => {\r\n  const style = {\r\n    ...styleProp,\r\n    ...(React.isValidElement(children) ? children.props.style : {}),\r\n  };\r\n\r\n  return (\r\n    <Transition in={inProp} timeout={timeout || 300}>\r\n      {(state, childProps) =>\r\n        cloneElement(children, {\r\n          style: { ...defaultStyle, ...style, ...transitionStyles[state] },\r\n          ...childProps,\r\n        })\r\n      }\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default RevealEffect;\r\n","import React, { createRef, useEffect, useState } from 'react';\r\nimport CmtCard from '../CmtCard';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { CmtTitle } from '../CmtTypography';\r\nimport RevealEffect from '../CmtTransitions/RevealEffect';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  revealHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: 24,\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  },\r\n  revealArea: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'absolute',\r\n    overflowY: 'auto',\r\n    left: 0,\r\n    top: '100%',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 3,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtRevealCard = ({ revealed, onClose, revealComponentTitle, titleProps, revealComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const contentRef = createRef();\r\n  const [contentHeight, setContentHeight] = useState(0);\r\n\r\n  const windowReSized = () => {\r\n    if (contentRef.current) setContentHeight(contentRef.current.clientHeight);\r\n  };\r\n\r\n  useEffect(() => {\r\n    windowReSized();\r\n  }, [revealed]);\r\n\r\n  return (\r\n    <CmtCard {...rest}>\r\n      <Box width=\"100%\" ref={contentRef}>\r\n        {children}\r\n      </Box>\r\n      <RevealEffect in={revealed}>\r\n        <Box className={clsx(classes.revealArea)}>\r\n          <PerfectScrollbar style={{ height: contentHeight }}>\r\n            <Box className={classes.revealHeader}>\r\n              <Box flex={1}>{revealComponentTitle && <CmtTitle content={revealComponentTitle} {...titleProps} />}</Box>\r\n              <Box my={-3}>\r\n                <IconButton onClick={onClose}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n            {revealComponent}\r\n          </PerfectScrollbar>\r\n        </Box>\r\n      </RevealEffect>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCmtRevealCard.propTypes = {\r\n  revealed: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  revealComponentTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  revealComponent: PropTypes.element,\r\n};\r\n\r\nCmtRevealCard.defaultProps = {\r\n  revealed: false,\r\n  revealComponentTitle: '',\r\n  titleProps: {\r\n    variant: 'h2',\r\n    component: 'div',\r\n  },\r\n};\r\n\r\nexport default CmtRevealCard;\r\n","import React, { useRef, useState } from 'react';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Box, Button, Chip, Divider, Fade, TextField, Typography } from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PersonOutlinedIcon from '@material-ui/icons/PersonOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport Link from '@material-ui/core/Link';\r\nimport {Contracts, Formatter, Accounts} from '../../../../utils/index';\r\nimport { useEffect } from 'reactn';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  divider: {\r\n    flex: 1,\r\n  },\r\n  noBorder: {\r\n    '& fieldset': {\r\n      border: 0,\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'stretch',\r\n    width: '100%',\r\n  },\r\n  textField: {\r\n    position: 'relative',\r\n    flex: '1 1 auto',\r\n    width: '1%',\r\n    minWidth: 0,\r\n\r\n    '&:not(:last-child) .MuiOutlinedInput-root': {\r\n      borderTopRightRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n    },\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: props => ({\r\n    backgroundColor: props.linkCopy ? '#8DCD03' : '#6200EE',\r\n    color: '#fff',\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n    height: '100%',\r\n\r\n    '&:hover': {\r\n      backgroundColor: props.linkCopy ? '#8DCD03' : '#6200EE',\r\n    },\r\n  }),\r\n  successMsg: {\r\n    color: '#8DCD03',\r\n  },\r\n  userIcon: {\r\n    marginBottom: 2,\r\n    '& > svg': {\r\n      color: '#8DCD03',\r\n      height: 55,\r\n      width: 55,\r\n    },\r\n  },\r\n  iconBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nlet register = async (name) => {\r\n  let res = await Contracts.registerSelfPool(name); \r\n  console.log(res);\r\n}\r\n\r\nconst SelfManagerRegistration = () => {\r\n  const linkStr = 'https://www.example.com/home/';\r\n  const [linkCopy, setLinkCopy] = useState(false);\r\n  const [invitations, setInvitations] = useState([]);\r\n  const [invited, setInvited] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const classes = useStyles({ linkCopy });\r\n\r\n  const [userAddress, setAddress] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      setAddress(await Accounts.getCurrentAccount());\r\n      console.log(await Accounts.getCurrentAccount());\r\n    }\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  const linkRef = useRef(null);\r\n\r\n  const copyToClipboard = () => {\r\n    linkRef.current.select();\r\n    document.execCommand('copy');\r\n    setLinkCopy(true);\r\n    setTimeout(() => {\r\n      setLinkCopy(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleChipDelete = item => {\r\n    setInvitations(invitations.filter(chip => chip !== item));\r\n  };\r\n\r\n  const handleOnKeyDown = event => {\r\n    if (event.key === 'Enter' && event.target.value) {\r\n      event.target.value.split(',').map(value => {\r\n        if (invitations.length == 1) {return}\r\n        if (!invitations.some(item => item === value.trim()) && value.trim() !== '') {\r\n          invitations.push(value.trim());\r\n        }\r\n\r\n        return value;\r\n      });\r\n\r\n      setInvitations([...invitations]);\r\n      setUsername('');\r\n    }\r\n  };\r\n\r\n  function getNativeCoin() {\r\n    if (window.localStorage.getItem('chain') == 'ETH') {\r\n      return ' ETH ';\r\n    } else {\r\n      return ' BNB ';\r\n    }\r\n  }\r\n\r\n  function getNativePrice() {\r\n    if (window.localStorage.getItem('chain') == 'ETH') {\r\n      return 0.05;\r\n    } else {\r\n      return 0.1;\r\n    }\r\n  }\r\n\r\n  const sendInvitation = async() => {\r\n    await register(invitations[0]);\r\n    setInvited(true);\r\n    \r\n    setInvitations([]);\r\n    setUsername('');\r\n  };\r\n\r\n  const invitedSuccess = () => {\r\n\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={4}>\r\n        {/* <Box className={classes.userIcon}>\r\n          <PersonOutlinedIcon />\r\n        </Box> */}\r\n        <Box component=\"h4\" mb={4}>\r\n          Your transaction is now processing. When its done, you can find your pool at:  \r\n        </Box>\r\n        <Link href={\"https://fund.nyan.finance/pool/\" + userAddress}>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => setInvited(false)}>\r\n            Go to Pool URL\r\n          </Button>\r\n        </Link>\r\n        \r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    \r\n    <CmtCardContent>\r\n      {invited ? (\r\n        <Fade in={invited}>{invitedSuccess()}</Fade>\r\n      ) : (\r\n        <Fade in={!invited}>\r\n          <Box mb={4}>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" border={1} borderColor=\"borderColor.main\" borderRadius=\"borderRadius\">\r\n              {invitations.map((item, index) => (\r\n                <Chip key={index} label={item} className={classes.chip} onDelete={() => handleChipDelete(item)} />\r\n              ))}\r\n              <AppTextInput\r\n                fullWidth={true}\r\n                variant=\"outlined\"\r\n                placeholder=\"Type a nickname, then press enter...\"\r\n                value={username}\r\n                onChange={event => setUsername(event.target.value)}\r\n                onKeyDown={handleOnKeyDown}\r\n                className={classes.noBorder}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <Typography gutterBottom component=\"h6\" variant=\"h6\">\r\n                Registration {getNativeCoin()} cost:\r\n              </Typography>\r\n              <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n                {getNativePrice()} {getNativeCoin()}\r\n              </Typography>\r\n              {/* <Box className={classes.inputGroup}>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  value={linkStr}\r\n                  placeholder=\"Type name or email address...\"\r\n                  inputProps={{ ref: linkRef }}\r\n                  onFocus={copyToClipboard}\r\n                  readOnly\r\n                />\r\n                <Box className={classes.inputGroupAppend}>\r\n                  <Button className={classes.button} onClick={copyToClipboard}>\r\n                    {linkCopy ? <CheckCircleIcon /> : <FileCopyIcon />}\r\n                  </Button>\r\n                </Box>\r\n              </Box> */}\r\n\r\n              {linkCopy && (\r\n                <Fade in={linkCopy}>\r\n                  <Box display=\"flex\" alignItems=\"center\" mt={2} className={classes.successMsg}>\r\n                    <Box component=\"span\" mr={2}>\r\n                      <CheckCircleIcon className={classes.iconBlock} />\r\n                    </Box>\r\n                    <Typography>Link copied!</Typography>\r\n                  </Box>\r\n                </Fade>\r\n              )}\r\n            </Box>\r\n            <Box my={4}>\r\n              <Button color=\"primary\" variant=\"contained\" disabled={!invitations.length} onClick={sendInvitation}>\r\n                Register\r\n              </Button>\r\n            </Box>\r\n        \r\n          </Box>\r\n        </Fade>\r\n      )}\r\n\r\n      \r\n    </CmtCardContent>\r\n  );\r\n};\r\n\r\nexport default SelfManagerRegistration;\r\n","import React, { useState } from 'react';\r\nimport { Button, fade } from '@material-ui/core';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport SelfManagerRegistration from '../Registration';\r\nimport CmtRevealCard from '../../../../@coremat/CmtRevealCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '400px',\r\n  },\r\n  revealCard: {\r\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    height: '100%',\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n    '& .Cmt-content-head': {\r\n      paddingBottom: 18,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 16,\r\n  },\r\n  subTitileRoot: {\r\n    fontSize: 14,\r\n    marginBottom: 16,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst RegisterSelfManager = () => {\r\n  const [revealed, setRevealed] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const revelCard = () => {\r\n    setRevealed(true);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setRevealed(false);\r\n  };\r\n  return (\r\n    <CmtRevealCard\r\n      className={classes.root}\r\n      revealComponentTitle=\"Pool Creation\"\r\n      revealComponent={<SelfManagerRegistration />}\r\n      titleProps={{ component: 'div', variant: 'h4' }}\r\n      revealed={revealed}\r\n      onClose={handleOnClose}>\r\n      <CmtAdvCardContent\r\n        className={classes.revealCard}\r\n        // avatar={<CmtImage src={'/images/dashboard/Friend-icon.svg'} />}\r\n        title=\"Create your own pool\"\r\n        titleProps={{\r\n          variant: 'h3',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Manage a pool and get 20% of the profits.\"\r\n        subTitleProps={{\r\n          component: 'p',\r\n          variant: 'subtitle1',\r\n          className: classes.subTitileRoot,\r\n        }}\r\n        extraContent={\r\n          <Button variant=\"contained\" color=\"primary\" onClick={revelCard}>\r\n            Create\r\n          </Button>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtRevealCard>\r\n  );\r\n};\r\n\r\nexport default RegisterSelfManager;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Box } from '@material-ui/core';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport RegisterSelfManager from './onBoard';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootPaper: {\r\n    width: '100%',\r\n    '& .MuiPaper-root': {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Dashboard', link: '/dashboard' },\r\n    { label: 'Self Management', isActive: true },\r\n  ];\r\n\r\n\r\nfunction getSteps() {\r\n    return [\r\n        'I acknowledge that I understand what Self Management means', \r\n        'I acknowledge that I should adhere to all financial regulations in my area', \r\n        'I acknowledge that all pool data will be publicly available'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n        return `Creating a Self Managed pool means you're allowing the Defi space to give you access to \r\n                liquidity with the expectation of management and growth of that liquidity. As a Self Manager, \r\n                you'll have access to 20% of the liquidity in your pool. You may not exceed that 20% limit unless\r\n                your pool suporters vote for it.`;\r\n        case 1:\r\n        return `Nyan.finance is a decentralized product, meaning that anyone may access it. However,\r\n                individual users and Self Managers should refer to any laws and regulations surrounding \r\n                Digital Ledger Technologies and Finance.`;\r\n        case 2:\r\n        return `Due to the nature of public Digital Ledger Technologies, all data from \r\n                Self Managed Pools and the Nyan fund will be freely accessible. Various \r\n                models and algorithms for examining pools in order to make this data easily \r\n                accessible. `;\r\n        default:\r\n        return 'Unknown step';\r\n    }\r\n}\r\n\r\nexport default function SelfManagerRegister() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n  \r\n    const handleNext = () => {\r\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n    };\r\n  \r\n    const handleReset = () => {\r\n      setActiveStep(0);\r\n    };\r\n  \r\n    return (\r\n      <Box className={classes.root}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n              <StepContent>\r\n                <Typography>{getStepContent(index)}</Typography>\r\n                <Box className={classes.actionsContainer}>\r\n                  <Box>\r\n                    <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                      {activeStep === steps.length - 1 ? 'I Understand' : 'Next'}\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </StepContent>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        {activeStep === steps.length && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <RegisterSelfManager />\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </Paper>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n"],"sourceRoot":""}