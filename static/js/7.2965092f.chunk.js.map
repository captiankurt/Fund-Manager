{"version":3,"sources":["@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/Common/formElements/AppTextInput.js","@coremat/CmtTransitions/RevealEffect.js","@coremat/CmtRevealCard/index.js","routes/Dashboards/Managers/data/data.js","routes/Dashboards/Managers/voteProgress/progress.js","routes/Dashboards/Managers/FundManagerRegistration/index.js","routes/Dashboards/Managers/register/index.js","routes/Dashboards/Managers/index.js"],"names":["useStyles","makeStyles","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","heading","breadcrumbComponent","children","rest","classes","Box","className","clsx","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","items","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","root","flexWrap","contentArea","width","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","pageFull","PageContainer","breadcrumbs","restProps","Slide","in","direction","mountOnEnter","unmountOnExit","AppTextInput","type","name","id","fullWidth","size","value","onChange","helperText","error","prototype","PropTypes","string","bool","func","defaultProps","defaultStyle","transition","transitionStyles","entering","opacity","transform","entered","exiting","exited","RevealEffect","inProp","styleProp","style","timeout","React","isValidElement","props","Transition","state","childProps","cloneElement","revealHeader","justifyContent","padding","paddingTop","revealArea","backgroundColor","palette","background","paper","left","zIndex","boxSizing","CmtRevealCard","revealed","onClose","revealComponentTitle","titleProps","revealComponent","contentRef","createRef","useState","contentHeight","setContentHeight","useEffect","current","clientHeight","CmtCard","ref","flex","content","my","IconButton","onClick","data","uv","pv","amt","LinearBuffer","progress","setProgress","buffer","setBuffer","progressRef","useRef","diff","Math","random","diff2","timer","setInterval","clearInterval","LinearProgress","valueBuffer","divider","noBorder","border","inputGroup","textField","minWidth","borderTopRightRadius","borderBottomRightRadius","chip","margin","spacing","inputGroupAppend","marginRight","button","linkCopy","borderTopLeftRadius","borderBottomLeftRadius","successMsg","userIcon","iconBlock","FundManagerRegistration","invitations","setInvitations","invited","setInvited","username","setUsername","registerCandidate","a","Contracts","registerAsFundManager","console","log","CmtCardContent","Fade","Button","borderColor","borderRadius","Chip","onDelete","filter","handleChipDelete","placeholder","event","target","onKeyDown","split","length","some","trim","push","gutterBottom","mt","mr","disabled","revealCard","fade","primary","main","paddingLeft","paddingBottom","subTitileRoot","letterSpacing","RegisterFundManager","setRevealed","CmtAdvCardContent","avatar","CmtImage","src","title","subTitle","subTitleProps","extraContent","alignCenter","useRowStyles","borderBottom","Row","row","open","setOpen","Fragment","TableRow","TableCell","scope","align","allowance","profits","roi","colSpan","Collapse","right","bottom","dataKey","strokeDasharray","labelStyle","itemStyle","cursor","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","fill","fillOpacity","rows","createCandidateData","candidate","votes","candidateRows","sortCandidates","getCandidates","res","names","getNextVotingBlock","votingBlock","i","voteForCandidate","marginTop","lighten","modal","maxWidth","boxShadow","shadows","bullet","card","FundManagers","nextVotingPeriod","setPeriod","currentBlock","setCurrentBlock","isVotingLive","setVotingLive","getCurrentBlock","isFundVotingLive","loadData","IntlMessages","TableContainer","Paper","Table","TableHead","TableBody","table","Formatter","getRoundedBalance","TextField","InputLabelProps","shrink"],"mappings":"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","file":"static/js/7.2965092f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppTextInput = ({ type, name, id, fullWidth, size, value, onChange, helperText, variant, error, ...rest }) => {\r\n  return (\r\n    <TextField\r\n      {...rest}\r\n      type={type}\r\n      name={name}\r\n      id={id || name}\r\n      size={size}\r\n      fullWidth={fullWidth}\r\n      value={value}\r\n      variant={variant}\r\n      onChange={onChange}\r\n      error={error || helperText !== ''}\r\n      helperText={helperText}\r\n    />\r\n  );\r\n};\r\n\r\nAppTextInput.prototype = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.bool,\r\n};\r\n\r\nAppTextInput.defaultProps = {\r\n  type: 'text',\r\n  fullWidth: true,\r\n  size: 'small',\r\n  error: false,\r\n  helperText: '',\r\n};\r\n\r\nexport default AppTextInput;\r\n","import React, { cloneElement } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst defaultStyle = {\r\n  transition: `all 0.3s ease`,\r\n};\r\n\r\nconst transitionStyles = {\r\n  entering: { opacity: 1, transform: 'translateY(-100%)' },\r\n  entered: { opacity: 1, transform: 'translateY(-100%)' },\r\n  exiting: { opacity: 0, transform: 'translateY(0%)' },\r\n  exited: { opacity: 0, transform: 'translateY(0%)' },\r\n};\r\n\r\nconst RevealEffect = ({ in: inProp, style: styleProp, timeout, children }) => {\r\n  const style = {\r\n    ...styleProp,\r\n    ...(React.isValidElement(children) ? children.props.style : {}),\r\n  };\r\n\r\n  return (\r\n    <Transition in={inProp} timeout={timeout || 300}>\r\n      {(state, childProps) =>\r\n        cloneElement(children, {\r\n          style: { ...defaultStyle, ...style, ...transitionStyles[state] },\r\n          ...childProps,\r\n        })\r\n      }\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default RevealEffect;\r\n","import React, { createRef, useEffect, useState } from 'react';\r\nimport CmtCard from '../CmtCard';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { CmtTitle } from '../CmtTypography';\r\nimport RevealEffect from '../CmtTransitions/RevealEffect';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  revealHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: 24,\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  },\r\n  revealArea: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'absolute',\r\n    overflowY: 'auto',\r\n    left: 0,\r\n    top: '100%',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 3,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtRevealCard = ({ revealed, onClose, revealComponentTitle, titleProps, revealComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const contentRef = createRef();\r\n  const [contentHeight, setContentHeight] = useState(0);\r\n\r\n  const windowReSized = () => {\r\n    if (contentRef.current) setContentHeight(contentRef.current.clientHeight);\r\n  };\r\n\r\n  useEffect(() => {\r\n    windowReSized();\r\n  }, [revealed]);\r\n\r\n  return (\r\n    <CmtCard {...rest}>\r\n      <Box width=\"100%\" ref={contentRef}>\r\n        {children}\r\n      </Box>\r\n      <RevealEffect in={revealed}>\r\n        <Box className={clsx(classes.revealArea)}>\r\n          <PerfectScrollbar style={{ height: contentHeight }}>\r\n            <Box className={classes.revealHeader}>\r\n              <Box flex={1}>{revealComponentTitle && <CmtTitle content={revealComponentTitle} {...titleProps} />}</Box>\r\n              <Box my={-3}>\r\n                <IconButton onClick={onClose}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n            {revealComponent}\r\n          </PerfectScrollbar>\r\n        </Box>\r\n      </RevealEffect>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCmtRevealCard.propTypes = {\r\n  revealed: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  revealComponentTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  revealComponent: PropTypes.element,\r\n};\r\n\r\nCmtRevealCard.defaultProps = {\r\n  revealed: false,\r\n  revealComponentTitle: '',\r\n  titleProps: {\r\n    variant: 'h2',\r\n    component: 'div',\r\n  },\r\n};\r\n\r\nexport default CmtRevealCard;\r\n","const data = [\r\n  { name: 'Jan 1', uv: 0, pv: 2400, amt: 2400 },\r\n  { name: 'Jan 2', uv: 3, pv: 1398, amt: 2210 },\r\n  { name: 'Jan 3', uv: 2, pv: 9800, amt: 2290 },\r\n  { name: 'Jan 4', uv: 1, pv: 3908, amt: 2000 },\r\n  { name: 'Jan 5', uv: 3, pv: 4800, amt: 2181 },\r\n  { name: 'Jan 6', uv: 4, pv: 3800, amt: 2500 },\r\n  { name: 'Jan 7', uv: 2, pv: 4300, amt: 2100 },\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 0;\r\n        const diff2 = Math.random() * 0;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Box, Button, Chip, Divider, Fade, TextField, Typography } from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PersonOutlinedIcon from '@material-ui/icons/PersonOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport {Contracts, Formatter} from '../../../../utils/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  divider: {\r\n    flex: 1,\r\n  },\r\n  noBorder: {\r\n    '& fieldset': {\r\n      border: 0,\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'stretch',\r\n    width: '100%',\r\n  },\r\n  textField: {\r\n    position: 'relative',\r\n    flex: '1 1 auto',\r\n    width: '1%',\r\n    minWidth: 0,\r\n\r\n    '&:not(:last-child) .MuiOutlinedInput-root': {\r\n      borderTopRightRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n    },\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: props => ({\r\n    backgroundColor: props.linkCopy ? '#8DCD03' : '#6200EE',\r\n    color: '#fff',\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n    height: '100%',\r\n\r\n    '&:hover': {\r\n      backgroundColor: props.linkCopy ? '#8DCD03' : '#6200EE',\r\n    },\r\n  }),\r\n  successMsg: {\r\n    color: '#8DCD03',\r\n  },\r\n  userIcon: {\r\n    marginBottom: 2,\r\n    '& > svg': {\r\n      color: '#8DCD03',\r\n      height: 55,\r\n      width: 55,\r\n    },\r\n  },\r\n  iconBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst FundManagerRegistration = () => {\r\n  const linkStr = 'https://www.example.com/home/';\r\n  const [linkCopy, setLinkCopy] = useState(false);\r\n  const [invitations, setInvitations] = useState([]);\r\n  const [invited, setInvited] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const classes = useStyles({ linkCopy });\r\n\r\n  const linkRef = useRef(null);\r\n\r\n  const copyToClipboard = () => {\r\n    linkRef.current.select();\r\n    document.execCommand('copy');\r\n    setLinkCopy(true);\r\n    setTimeout(() => {\r\n      setLinkCopy(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleChipDelete = item => {\r\n    setInvitations(invitations.filter(chip => chip !== item));\r\n  };\r\n\r\n  const handleOnKeyDown = event => {\r\n    if (event.key === 'Enter' && event.target.value) {\r\n      event.target.value.split(',').map(value => {\r\n        if (invitations.length == 1) {return}\r\n        if (!invitations.some(item => item === value.trim()) && value.trim() !== '') {\r\n          invitations.push(value.trim());\r\n        }\r\n\r\n        return value;\r\n      });\r\n\r\n      setInvitations([...invitations]);\r\n      setUsername('');\r\n    }\r\n  };\r\n\r\n  let registerCandidate = async (name) => {\r\n    try {\r\n      let res = await Contracts.registerAsFundManager(name);\r\n      setInvited(true);\r\n      setInvitations([]);\r\n      setUsername('');\r\n    } catch(e) {\r\n      console.log(e);\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const sendInvitation = () => {\r\n    registerCandidate(invitations[0]);\r\n  };\r\n\r\n  const invitedSuccess = () => {\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={4}>\r\n        <Box className={classes.userIcon}>\r\n          <PersonOutlinedIcon />\r\n        </Box>\r\n        <Box component=\"h4\" mb={4}>\r\n          Registration transaction is now processing!\r\n        </Box>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setInvited(false)}>\r\n          You should appear in the Candidate pool shortly.\r\n        </Button>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CmtCardContent>\r\n      {invited ? (\r\n        <Fade in={invited}>{invitedSuccess()}</Fade>\r\n      ) : (\r\n        <Fade in={!invited}>\r\n          <Box mb={4}>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" border={1} borderColor=\"borderColor.main\" borderRadius=\"borderRadius\">\r\n              {invitations.map((item, index) => (\r\n                <Chip key={index} label={item} className={classes.chip} onDelete={() => handleChipDelete(item)} />\r\n              ))}\r\n              <AppTextInput\r\n                fullWidth={true}\r\n                variant=\"outlined\"\r\n                placeholder=\"Type a nickname, then press enter...\"\r\n                value={username}\r\n                onChange={event => setUsername(event.target.value)}\r\n                onKeyDown={handleOnKeyDown}\r\n                className={classes.noBorder}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <Typography gutterBottom component=\"h6\" variant=\"h6\">\r\n                Registration ETH cost:\r\n              </Typography>\r\n              <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n                0.05 ETH\r\n              </Typography>\r\n              {/* <Box className={classes.inputGroup}>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  value={linkStr}\r\n                  placeholder=\"Type name or email address...\"\r\n                  inputProps={{ ref: linkRef }}\r\n                  onFocus={copyToClipboard}\r\n                  readOnly\r\n                />\r\n                <Box className={classes.inputGroupAppend}>\r\n                  <Button className={classes.button} onClick={copyToClipboard}>\r\n                    {linkCopy ? <CheckCircleIcon /> : <FileCopyIcon />}\r\n                  </Button>\r\n                </Box>\r\n              </Box> */}\r\n\r\n              {linkCopy && (\r\n                <Fade in={linkCopy}>\r\n                  <Box display=\"flex\" alignItems=\"center\" mt={2} className={classes.successMsg}>\r\n                    <Box component=\"span\" mr={2}>\r\n                      <CheckCircleIcon className={classes.iconBlock} />\r\n                    </Box>\r\n                    <Typography>Link copied!</Typography>\r\n                  </Box>\r\n                </Fade>\r\n              )}\r\n            </Box>\r\n            <Box my={4}>\r\n              <Button color=\"primary\" variant=\"contained\" disabled={!invitations.length} onClick={() => sendInvitation()}>\r\n                Register\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Fade>\r\n      )}\r\n\r\n      \r\n    </CmtCardContent>\r\n  );\r\n};\r\n\r\nexport default FundManagerRegistration;\r\n","import React, { useState } from 'react';\r\nimport { Button, fade } from '@material-ui/core';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport FundManagerRegistration from '../FundManagerRegistration';\r\nimport CmtRevealCard from '../../../../@coremat/CmtRevealCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n  },\r\n  revealCard: {\r\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    height: '100%',\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n    '& .Cmt-content-head': {\r\n      paddingBottom: 18,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 16,\r\n  },\r\n  subTitileRoot: {\r\n    fontSize: 14,\r\n    marginBottom: 16,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst RegisterFundManager = () => {\r\n  const [revealed, setRevealed] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const revelCard = () => {\r\n    console.log()\r\n    setRevealed(true);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setRevealed(false);\r\n  };\r\n  return (\r\n    <CmtRevealCard\r\n      className={classes.root}\r\n      revealComponentTitle=\"Register as a Nyan Fund Manager\"\r\n      revealComponent={<FundManagerRegistration />}\r\n      titleProps={{ component: 'div', variant: 'h4' }}\r\n      revealed={revealed}\r\n      onClose={handleOnClose}>\r\n      <CmtAdvCardContent\r\n        className={classes.revealCard}\r\n        avatar={<CmtImage src={'/images/dashboard/Friend-icon.svg'} />}\r\n        title=\"Become a Nyan Fund Manager\"\r\n        titleProps={{\r\n          variant: 'h3',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Help manage the Nyan ecosystem and get paid. If you want to run your own pool, go to 'create your own pool'.\"\r\n        subTitleProps={{\r\n          component: 'p',\r\n          variant: 'subtitle1',\r\n          className: classes.subTitileRoot,\r\n        }}\r\n        extraContent={\r\n          <Button variant=\"contained\" color=\"primary\" onClick={revelCard}>\r\n            Register as a candidate.\r\n          </Button>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtRevealCard>\r\n  );\r\n};\r\n\r\nexport default RegisterFundManager;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport data from './data/data';\r\nimport LinearBuffer from './voteProgress/progress';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport RegisterFundManager from './register';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {Contracts, Formatter} from '../../../utils/index';\r\nimport { useEffect } from 'reactn';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\n\r\n\r\nconst breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Dashboard', link: '/dashboard' },\r\n    { label: 'Managers', isActive: true },\r\n  ];\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(name, allowance, profits, roi) {\r\n  return {\r\n    name,\r\n    allowance,\r\n    profits,\r\n    roi\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.allowance}</TableCell>\r\n        <TableCell align=\"right\">{row.profits}</TableCell>\r\n        <TableCell align=\"right\">{row.roi}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                ETH Profits (Last 7 days)\r\n              </Typography>\r\n              <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <AreaChart data={data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <Tooltip labelStyle={{ color: 'black' }} itemStyle={{ color: 'black' }} cursor={false} />\r\n                    <defs>\r\n                        <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                        <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                        <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"\" fill=\"url(#color3)\" fillOpacity={1} />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n\r\n\r\n              {/* <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map(historyRow => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table> */}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\n//get managers function and populate rows (createData)\r\n\r\nconst rows = [\r\n \r\n];\r\n\r\nfunction createCandidateData(candidate, votes) {\r\n    return { candidate, votes };\r\n}\r\n\r\n//get candidates function and populate candidate rows\r\n\r\nlet candidateRows = [\r\n    \r\n];\r\n\r\nconst sortCandidates = async () => {\r\n  let candidateRows = [];\r\n  let res = await Contracts.getCandidates();\r\n  let names = res[0];\r\n  let votes = res[1];\r\n  let votingBlock = await Contracts.getNextVotingBlock();\r\n  for (let i = 0; i < names.length; i++) {\r\n    candidateRows.push(createCandidateData(names[i], votes[i]));\r\n  }\r\n\r\n  return votingBlock;\r\n}\r\n\r\nconst voteForCandidate = async (candidate) => {\r\n  console.log(candidate);\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    padding: {\r\n        marginTop: '30px',\r\n        width: '100%'\r\n    },\r\n    root: {\r\n        backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    modal: {\r\n      minWidth: 275,\r\n      maxWidth: 445,\r\n      margin: '0 auto',\r\n      marginTop: '30px',\r\n      backgroundColor: 'transparent',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(4, 8, 6),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    card: {\r\n      backgroundColor: 'white'\r\n    }\r\n}));\r\n\r\n\r\nexport default function FundManagers() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [nextVotingPeriod, setPeriod] = React.useState(0);\r\n  const [currentBlock, setCurrentBlock] = React.useState(0);\r\n  const [isVotingLive, setVotingLive] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      setPeriod(await sortCandidates());\r\n      setCurrentBlock(await Contracts.getCurrentBlock());\r\n      setVotingLive(await Contracts.isFundVotingLive());\r\n    }\r\n\r\n    loadData();\r\n  }, []);\r\n  return (\r\n    <PageContainer heading=\"\" breadcrumbs={breadcrumbs}>\r\n        <div>\r\n          <div>\r\n            {isVotingLive ? \r\n              <div>\r\n                {nextVotingPeriod > currentBlock ? \r\n                  <div>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                      <IntlMessages id={'managers.blocksuntilnextelectionperiod'} /> {nextVotingPeriod - currentBlock}\r\n                    </Typography>\r\n                    <LinearBuffer />\r\n                  </div> : null\r\n                } \r\n              </div> :\r\n              <div>\r\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n                  Registrations are open. Voting will resume shortly.\r\n                </Typography>\r\n                \r\n              </div>\r\n            }\r\n          </div>\r\n            \r\n            <Typography xs={12} className={classes.padding} variant=\"h1\" component=\"h2\" gutterBottom>\r\n              <IntlMessages id={'managers.fundmanagers'} />\r\n            </Typography>\r\n            <TableContainer component={Paper} className={classes.root}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell />\r\n                    <TableCell><IntlMessages id={'managers.manager'} /></TableCell>\r\n                    <TableCell align=\"right\"><IntlMessages id={'managers.allowance'} /></TableCell>\r\n                    <TableCell align=\"right\"><IntlMessages id={'managers.profits'} /></TableCell>\r\n                    <TableCell align=\"right\">ROI</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.map(row => (\r\n                    <Row key={row.name} row={row} />\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n\r\n            <Typography xs={12} className={classes.padding} variant=\"h1\" component=\"h2\" gutterBottom>\r\n              <IntlMessages id={'managers.candidates'} />\r\n            </Typography>\r\n            {/* <Button variant=\"contained\" onClick={handleOpen}>\r\n              <IntlMessages id={'managers.registercandidate'} />\r\n            </Button> */}\r\n            <RegisterFundManager />\r\n            <TableContainer component={Paper} className={classes.root}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><IntlMessages id={'managers.candidatename'} /></TableCell>\r\n                        <TableCell align=\"right\"><IntlMessages id={'managers.votes'} /></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {candidateRows.map(row => (\r\n                        <TableRow key={row.candidate}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.candidate}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{Formatter.getRoundedBalance(row.votes)}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <TextField\r\n                                    id=\"outlined-number\"\r\n                                    label=\"ETH\"\r\n                                    type=\"number\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Button className={classes.button} onClick={voteForCandidate(row.candidate)} variant=\"contained\">Vote!</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n        \r\n    </PageContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}