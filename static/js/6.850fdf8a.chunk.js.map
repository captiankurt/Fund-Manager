{"version":3,"sources":["@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@jumbo/components/PageComponents/layouts/PageContainer.js","routes/Dashboards/Managers/data/data.js","routes/Dashboards/Managers/voteProgress/progress.js","routes/Dashboards/Managers/index.js"],"names":["useStyles","makeStyles","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","heading","breadcrumbComponent","children","rest","classes","Box","className","clsx","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","items","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","root","flexWrap","contentArea","width","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","pageFull","PageContainer","breadcrumbs","restProps","Slide","in","direction","mountOnEnter","unmountOnExit","data","name","uv","pv","amt","LinearBuffer","React","useState","progress","setProgress","buffer","setBuffer","progressRef","useRef","useEffect","current","diff","Math","random","diff2","timer","setInterval","clearInterval","LinearProgress","value","valueBuffer","useRowStyles","borderBottom","Row","props","row","open","setOpen","Fragment","TableRow","TableCell","IconButton","size","onClick","scope","align","allowance","profits","roi","style","paddingBottom","paddingTop","colSpan","Collapse","timeout","margin","gutterBottom","right","left","bottom","dataKey","strokeDasharray","labelStyle","itemStyle","cursor","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","type","stroke","fill","fillOpacity","rows","candidateRows","padding","marginTop","backgroundColor","lighten","palette","background","paper","modal","minWidth","maxWidth","button","spacing","border","boxShadow","shadows","bullet","transform","FundManagers","IntlMessages","TableContainer","Paper","Table","TableHead","TableBody","Button","table","candidate","votes","TextField","InputLabelProps","shrink","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","Card","CardContent","title","pos","CardActions"],"mappings":"0MAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,eAAe,aACbC,QAAS,OACTC,cAAe,UACdH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,WAAY,SACZH,cAAe,QAGnBI,UAAU,eACPP,EAAMI,YAAYI,KAAK,MAAQ,CAC9BC,aAAc,SAoBLC,EAfI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,oBAAqBC,EAAwB,EAAxBA,SAAaC,EAAW,4DACpEC,EAAUjB,IAEhB,OACE,kBAACkB,EAAA,EAAD,eAAKC,UAAWC,YAAKH,EAAQd,eAAgB,eAAgBkB,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAASR,GAC5F,kBAACS,EAAA,EAAD,CAAYC,UAAU,MAAMC,QAAQ,KAAKR,UAAWC,YAAKH,EAAQR,UAAW,UACzEI,GAEH,kBAACK,EAAA,EAAD,CAAKU,GAAI,CAAEC,GAAI,SAAWf,GAEzBC,I,kBCxBDf,EAAYC,aAAW,iBAAO,CAClC6B,OAAQ,CACNC,SAAU,IAEZC,UAAW,CACT5B,QAAS,QACT6B,MAAO,eAwBIC,EApBS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MACnBlB,GADwC,yBAC9BjB,KAEhB,OACE,kBAACoC,EAAA,EAAD,CAAajB,UAAU,eAAekB,aAAW,wBAC9CF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACTD,EAAKE,SACH,kBAAChB,EAAA,EAAD,CAAYiB,IAAKF,EAAOrB,UAAWF,EAAQa,OAAQG,MAAM,eACtDM,EAAKI,OAGR,kBAAC,IAAD,CAASD,IAAKF,EAAOrB,UAAWC,YAAKH,EAAQa,OAAQb,EAAQe,WAAYC,MAAM,UAAUW,GAAIL,EAAKM,MAAQ,KACvGN,EAAKI,Y,wDCvBA1C,aAAW,SAAAC,GAAK,YAAK,CACrC4C,KAAM,CACJ1C,QAAS,OACT2C,SAAU,QAEZC,aAAW,GACTC,MAAO,QADE,cAER/C,EAAMI,YAAYC,GAAG,MAAQ,CAC5B2C,aAAchD,EAAMiD,WAAWC,QAAQ,IACvCH,MAAM,eAAD,OAAiB/C,EAAMiD,WAAWC,QAAQ,KAA1C,OAJE,cAMRlD,EAAMI,YAAYC,GAAG,MAAQ,CAC5B2C,aAAchD,EAAMiD,WAAWC,QAAQ,MAPhC,GAUXC,eAAgB,CACdJ,MAAO/C,EAAMiD,WAAWC,QAAQ,KAChCE,OAAO,gBAAD,OAAkBpD,EAAMiD,WAAWC,QAAQ,KAA3C,KACNG,SAAU,SACVC,IAAK,GACLC,UAAW,OACXC,WAAY,O,iBCnBV1D,E,MAAYC,IAAW,SAAAC,GAAK,MAAK,CACrCyD,SAAU,CACRV,MAAO,YAmBIW,IAfO,SAAC,GAA8D,IAA5D/C,EAA2D,EAA3DA,QAASgD,EAAkD,EAAlDA,YAAa9C,EAAqC,EAArCA,SAAUI,EAA2B,EAA3BA,UAAW2C,EAAgB,EAAhBA,UAC5D7C,EAAUjB,IAEhB,OACE,kBAAC+D,EAAA,EAAD,CAAOC,IAAI,EAAMC,UAAU,KAAKC,cAAY,EAACC,eAAa,GACxD,kBAACjD,EAAA,EAAD,eAAKC,UAAWC,YAAKH,EAAQ0C,SAAUxC,IAAgB2C,IACnDjD,GAAWgD,IACX,kBAAC,EAAD,CAAYhD,QAASA,EAASC,oBAAqB+C,GAAe,kBAAC,EAAD,CAAiB1B,MAAO0B,MAE3F9C,M,sTCbMqD,EATF,CACX,CAAEC,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,MACvC,CAAEH,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,MACvC,CAAEH,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,MACvC,CAAEH,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,KACvC,CAAEH,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,MACvC,CAAEH,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,MACvC,CAAEH,KAAM,QAASC,GAAI,EAAGC,GAAI,KAAMC,IAAK,O,UCFnCxE,EAAYC,YAAW,CAC3B6C,KAAM,CACJG,MAAO,UAII,SAASwB,IACtB,IAAMxD,EAAUjB,IADqB,EAEL0E,IAAMC,SAAS,GAFV,mBAE9BC,EAF8B,KAEpBC,EAFoB,OAGTH,IAAMC,SAAS,IAHN,mBAG9BG,EAH8B,KAGtBC,EAHsB,KAK/BC,EAAcN,IAAMO,QAAO,eAyBjC,OAxBAP,IAAMQ,WAAU,WACdF,EAAYG,QAAU,WACpB,GAAIP,EAAW,IACbC,EAAY,GACZE,EAAU,QACL,CACL,IAAMK,EAAuB,EAAhBC,KAAKC,SACZC,EAAwB,EAAhBF,KAAKC,SACnBT,EAAYD,EAAWQ,GACvBL,EAAUH,EAAWQ,EAAOG,QAKlCb,IAAMQ,WAAU,WACd,IAAMM,EAAQC,aAAY,WACxBT,EAAYG,YACX,KAEH,OAAO,WACLO,cAAcF,MAEf,IAGD,kBAACtE,EAAA,EAAD,CAAKC,UAAWF,EAAQ6B,MACtB,kBAAC6C,EAAA,EAAD,CAAgBhE,QAAQ,SAASiE,MAAOhB,EAAUiB,YAAaf,K,sECX/DjB,EAAc,CAChB,CAAElB,MAAO,OAAQE,KAAM,KACvB,CAAEF,MAAO,YAAaE,KAAM,cAC5B,CAAEF,MAAO,WAAYF,UAAU,IAG7BqD,EAAe7F,YAAW,CAC9B6C,KAAM,CACJ,QAAS,CACPiD,aAAc,YAcpB,SAASC,EAAIC,GAAQ,IACXC,EAAQD,EAARC,IADU,EAEMxB,IAAMC,UAAS,GAFrB,mBAEXwB,EAFW,KAELC,EAFK,KAGZnF,EAAU6E,IAEhB,OACE,kBAAC,IAAMO,SAAP,KACE,kBAACC,EAAA,EAAD,CAAUnF,UAAWF,EAAQ6B,MAC3B,kBAACyD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYnE,aAAW,aAAaoE,KAAK,QAAQC,QAAS,kBAAMN,GAASD,KACtEA,EAAO,kBAAC,IAAD,MAA0B,kBAAC,IAAD,QAGtC,kBAACI,EAAA,EAAD,CAAW7E,UAAU,KAAKiF,MAAM,OAC7BT,EAAI7B,MAEP,kBAACkC,EAAA,EAAD,CAAWK,MAAM,SAASV,EAAIW,WAC9B,kBAACN,EAAA,EAAD,CAAWK,MAAM,SAASV,EAAIY,SAC9B,kBAACP,EAAA,EAAD,CAAWK,MAAM,SAASV,EAAIa,MAEhC,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWS,MAAO,CAAEC,cAAe,EAAGC,WAAY,GAAKC,QAAS,GAC9D,kBAACC,EAAA,EAAD,CAAUpD,GAAImC,EAAMkB,QAAQ,OAAOlD,eAAa,GAC9C,kBAACjD,EAAA,EAAD,CAAKoG,OAAQ,GACX,kBAAC7F,EAAA,EAAD,CAAYE,QAAQ,KAAK4F,cAAY,EAAC7F,UAAU,OAAhD,6BAGA,kBAAC,IAAD,CAAqBuB,MAAM,OAAOK,OAAQ,KACpC,kBAAC,IAAD,CAAWc,KAAMA,EAAMkD,OAAQ,CAAE9D,IAAK,EAAGgE,MAAO,EAAGC,KAAM,EAAGC,OAAQ,IACpE,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAASC,WAAY,CAAE5F,MAAO,SAAW6F,UAAW,CAAE7F,MAAO,SAAW8F,QAAQ,IAChF,8BACI,oCAAgBC,GAAG,SAASC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD,0BAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,IACnD,0BAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,MAGxD,kBAAC,IAAD,CAAMC,KAAK,WAAWb,QAAQ,KAAKc,OAAO,GAAGC,KAAK,eAAeC,YAAa,WAuDlG,IAAMC,EAAO,GAUb,IAAMC,EAAgB,GAIhB7I,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC4I,QAAS,CACLC,UAAW,OACX9F,MAAO,QAEXH,KAAM,CACFkG,gBAAiBC,YAAQ/I,EAAMgJ,QAAQC,WAAWC,MAAO,KAE7DC,MAAO,CACLC,SAAU,IACVC,SAAU,IACVjC,OAAQ,SACRyB,UAAW,OACXC,gBAAiBC,YAAQ/I,EAAMgJ,QAAQC,WAAWC,MAAO,IAE3DI,OAAQ,CACJlC,OAAQpH,EAAMuJ,QAAQ,IAE1BL,MAAO,CACLJ,gBAAiB9I,EAAMgJ,QAAQC,WAAWC,MAC1CM,OAAQ,iBACRC,UAAWzJ,EAAM0J,QAAQ,GACzBd,QAAS5I,EAAMuJ,QAAQ,EAAG,EAAG,IAE/BI,OAAQ,CACNzJ,QAAS,eACTkH,OAAQ,QACRwC,UAAW,kBAMF,SAASC,IAAgB,IAAD,EACbrF,IAAMC,UAAS,GADF,mBAC9BwB,EAD8B,KACxBC,EADwB,KAU/BnF,EAAUjB,IACciB,EAAQ4I,OACtC,OACE,kBAACjG,EAAA,EAAD,CAAe/C,QAAQ,GAAGgD,YAAaA,GACnC,6BACE,kBAACpC,EAAA,EAAD,CAAYE,QAAQ,KAAK4F,cAAY,GACnC,kBAACyC,EAAA,EAAD,CAAchC,GAAI,2CADpB,MAGE,kBAACvD,EAAD,MACA,kBAAChD,EAAA,EAAD,CAAYH,GAAI,GAAIH,UAAWF,EAAQ6H,QAASnH,QAAQ,KAAKD,UAAU,KAAK6F,cAAY,GACtF,kBAACyC,EAAA,EAAD,CAAchC,GAAI,2BAEpB,kBAACiC,EAAA,EAAD,CAAgBvI,UAAWwI,IAAO/I,UAAWF,EAAQ6B,MACrD,kBAACqH,EAAA,EAAD,CAAO9H,aAAW,qBACd,kBAAC+H,EAAA,EAAD,KACA,kBAAC9D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KAAW,kBAACyD,EAAA,EAAD,CAAchC,GAAI,sBAC7B,kBAACzB,EAAA,EAAD,CAAWK,MAAM,SAAQ,kBAACoD,EAAA,EAAD,CAAchC,GAAI,wBAC3C,kBAACzB,EAAA,EAAD,CAAWK,MAAM,SAAQ,kBAACoD,EAAA,EAAD,CAAchC,GAAI,sBAC3C,kBAACzB,EAAA,EAAD,CAAWK,MAAM,SAAjB,SAGJ,kBAACyD,EAAA,EAAD,KACCzB,EAAKtG,KAAI,SAAA4D,GAAG,OACT,kBAACF,EAAD,CAAKtD,IAAKwD,EAAI7B,KAAM6B,IAAKA,UAMjC,kBAACzE,EAAA,EAAD,CAAYH,GAAI,GAAIH,UAAWF,EAAQ6H,QAASnH,QAAQ,KAAKD,UAAU,KAAK6F,cAAY,GACtF,kBAACyC,EAAA,EAAD,CAAchC,GAAI,yBAEpB,kBAACsC,EAAA,EAAD,CAAQ3I,QAAQ,YAAY+E,QAzCnB,WACjBN,GAAQ,KAyCE,kBAAC4D,EAAA,EAAD,CAAchC,GAAI,gCAGpB,kBAACiC,EAAA,EAAD,CAAgBvI,UAAWwI,IAAO/I,UAAWF,EAAQ6B,MACjD,kBAACqH,EAAA,EAAD,CAAOhJ,UAAWF,EAAQsJ,MAAOlI,aAAW,gBACxC,kBAAC+H,EAAA,EAAD,KACA,kBAAC9D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAW,kBAACyD,EAAA,EAAD,CAAchC,GAAI,4BAC7B,kBAACzB,EAAA,EAAD,CAAWK,MAAM,SAAQ,kBAACoD,EAAA,EAAD,CAAchC,GAAI,oBAC3C,kBAACzB,EAAA,EAAD,CAAWK,MAAM,YAGrB,kBAACyD,EAAA,EAAD,KACCxB,EAAcvG,KAAI,SAAA4D,GAAG,OAClB,kBAACI,EAAA,EAAD,CAAU5D,IAAKwD,EAAIsE,WACf,kBAACjE,EAAA,EAAD,CAAW7E,UAAU,KAAKiF,MAAM,OAC3BT,EAAIsE,WAET,kBAACjE,EAAA,EAAD,CAAWK,MAAM,SAASV,EAAIuE,OAC9B,kBAAClE,EAAA,EAAD,CAAWK,MAAM,SACb,kBAAC8D,EAAA,EAAD,CACI1C,GAAG,kBACHrF,MAAM,SACN6F,KAAK,SACLmC,gBAAiB,CACbC,QAAQ,GAEZjJ,QAAQ,aAEZ,kBAAC2I,EAAA,EAAD,CAAQnJ,UAAWF,EAAQuI,OAAQ7H,QAAQ,aAA3C,kBAQxB,kBAACkJ,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjB5J,UAAWF,EAAQoI,MACnBlD,KAAMA,EACN6E,QAhFY,WAClB5E,GAAQ,IAgFF6E,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACb/D,QAAS,MAEX,kBAACgE,EAAA,EAAD,CAAMrH,GAAImC,GAKR,kBAACmF,EAAA,EAAD,CAAMnK,UAAWF,EAAQoI,OACvB,kBAACkC,EAAA,EAAD,KACE,kBAAC9J,EAAA,EAAD,CAAYN,UAAWF,EAAQuK,MAAOvJ,MAAM,gBAAgBsF,cAAY,GAAxE,2BAGA,kBAAC9F,EAAA,EAAD,CAAYN,UAAWF,EAAQwK,IAAKxJ,MAAM,iBAA1C,8DAGA,kBAACR,EAAA,EAAD,CAAYE,QAAQ,QAAQD,UAAU,KAAtC,2CAEE,+BAIJ,kBAACgK,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CAAQ7D,KAAK,SAAb","file":"static/js/6.850fdf8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","const data = [\r\n  { name: 'Jan 1', uv: 0, pv: 2400, amt: 2400 },\r\n  { name: 'Jan 2', uv: 3, pv: 1398, amt: 2210 },\r\n  { name: 'Jan 3', uv: 2, pv: 9800, amt: 2290 },\r\n  { name: 'Jan 4', uv: 1, pv: 3908, amt: 2000 },\r\n  { name: 'Jan 5', uv: 3, pv: 4800, amt: 2181 },\r\n  { name: 'Jan 6', uv: 4, pv: 3800, amt: 2500 },\r\n  { name: 'Jan 7', uv: 2, pv: 4300, amt: 2100 },\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 0;\r\n        const diff2 = Math.random() * 0;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport data from './data/data';\r\nimport LinearBuffer from './voteProgress/progress';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nconst breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Dashboard', link: '/dashboard' },\r\n    { label: 'Managers', isActive: true },\r\n  ];\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(name, allowance, profits, roi) {\r\n  return {\r\n    name,\r\n    allowance,\r\n    profits,\r\n    roi\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.allowance}</TableCell>\r\n        <TableCell align=\"right\">{row.profits}</TableCell>\r\n        <TableCell align=\"right\">{row.roi}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                ETH Profits (Last 7 days)\r\n              </Typography>\r\n              <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <AreaChart data={data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <Tooltip labelStyle={{ color: 'black' }} itemStyle={{ color: 'black' }} cursor={false} />\r\n                    <defs>\r\n                        <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                        <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                        <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"\" fill=\"url(#color3)\" fillOpacity={1} />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n\r\n\r\n              {/* <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map(historyRow => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table> */}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\n//get managers function and populate rows (createData)\r\n\r\nconst rows = [\r\n \r\n];\r\n\r\nfunction createCandidateData(candidate, votes) {\r\n    return { candidate, votes };\r\n}\r\n\r\n//get candidates function and populate candidate rows\r\n\r\nconst candidateRows = [\r\n    \r\n  ];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    padding: {\r\n        marginTop: '30px',\r\n        width: '100%'\r\n    },\r\n    root: {\r\n        backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    modal: {\r\n      minWidth: 275,\r\n      maxWidth: 445,\r\n      margin: '0 auto',\r\n      marginTop: '30px',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(4, 8, 6),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function FundManagers() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <PageContainer heading=\"\" breadcrumbs={breadcrumbs}>\r\n        <div>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            <IntlMessages id={'managers.blocksuntilnextelectionperiod'} /> 0\r\n          </Typography>\r\n            <LinearBuffer />\r\n            <Typography xs={12} className={classes.padding} variant=\"h1\" component=\"h2\" gutterBottom>\r\n              <IntlMessages id={'managers.fundmanagers'} />\r\n            </Typography>\r\n            <TableContainer component={Paper} className={classes.root}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell />\r\n                    <TableCell><IntlMessages id={'managers.manager'} /></TableCell>\r\n                    <TableCell align=\"right\"><IntlMessages id={'managers.allowance'} /></TableCell>\r\n                    <TableCell align=\"right\"><IntlMessages id={'managers.profits'} /></TableCell>\r\n                    <TableCell align=\"right\">ROI</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.map(row => (\r\n                    <Row key={row.name} row={row} />\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n\r\n            <Typography xs={12} className={classes.padding} variant=\"h1\" component=\"h2\" gutterBottom>\r\n              <IntlMessages id={'managers.candidates'} />\r\n            </Typography>\r\n            <Button variant=\"contained\" onClick={handleOpen}>\r\n              <IntlMessages id={'managers.registercandidate'} />\r\n            </Button>\r\n            \r\n            <TableContainer component={Paper} className={classes.root}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><IntlMessages id={'managers.candidatename'} /></TableCell>\r\n                        <TableCell align=\"right\"><IntlMessages id={'managers.votes'} /></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {candidateRows.map(row => (\r\n                        <TableRow key={row.candidate}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.candidate}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.votes}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <TextField\r\n                                    id=\"outlined-number\"\r\n                                    label=\"Number\"\r\n                                    type=\"number\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Button className={classes.button} variant=\"contained\">Vote!</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}>\r\n          <Fade in={open}>\r\n            {/* <div className={classes.paper}>\r\n              <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n              <p id=\"transition-modal-description\">react-transition-group animates me.</p>\r\n            </div> */}\r\n            <Card className={classes.modal}>\r\n              <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                  Becoming a Fund Manager\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                  There are certain rules to be aware of before registering.\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  There is a cost of 0.05 ETH to register.\r\n                  <br />\r\n                  \r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Fade>\r\n        </Modal>\r\n    </PageContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}