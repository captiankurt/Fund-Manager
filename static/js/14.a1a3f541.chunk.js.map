{"version":3,"sources":["routes/Dapps/Swap/index.js"],"names":["useStyles","makeStyles","theme","root","width","height","margin","backgroundColor","lighten","palette","background","paper","rootBox","display","spacing","paperStyle","borderRadius","position","bullet","transform","title","fontSize","pos","marginBottom","symbol","right","bottom","bnbLogo","bnbText","marginRight","fromLogo","leadText","top","left","numInput","approveSpend","marginTop","slippage","marginLeft","determineNetwork","window","localStorage","getItem","SimpleCard","classes","React","useState","name","setName","a","token","document","getElementById","value","console","log","Contracts","getTokenName","className","color","gutterBottom","variant","id","label","src","onChange","getName","type"],"mappings":"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","file":"static/js/14.a1a3f541.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Box } from '@material-ui/core';\r\nimport {Contracts, Formatter} from '../../../utils/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '60%',\r\n    height: '85%',\r\n    margin: '0 auto',\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  rootBox: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n      margin: theme.spacing(2),\r\n      width: theme.spacing(32),\r\n      height: theme.spacing(32),\r\n    },\r\n    \r\n  },\r\n  paperStyle: {\r\n    width: '100%',\r\n    height: '100px',\r\n    display: 'block',\r\n    borderRadius: '10px',\r\n    position: 'relative'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  symbol: {\r\n    height: '30px',\r\n    right: '10px',\r\n    bottom: '12px',\r\n    position: 'absolute'\r\n  },\r\n  bnbLogo: {\r\n    height: '30px',\r\n    right: '10px',\r\n    bottom: '12px',\r\n    position: 'absolute'\r\n  },\r\n  bnbText: {\r\n    display: 'inline-block',\r\n    bottom: '8px',\r\n    marginRight: '10px',\r\n    position: 'relative'\r\n  },\r\n  fromLogo: {\r\n    height: '100%'\r\n  },\r\n  leadText: {\r\n      position: 'absolute',\r\n      top: '10px',\r\n      left: '8px'\r\n  },\r\n  numInput: {\r\n      position: 'absolute',\r\n      bottom: '14px',\r\n      left: '8px',\r\n      width: '65%'\r\n  },\r\n  approveSpend: {\r\n      width: '80%',\r\n      height: '40px',\r\n      margin: '0 auto',\r\n      marginTop: '15px',\r\n      display: 'block'\r\n  },\r\n  slippage: {\r\n      marginLeft: '8px'\r\n  }\r\n}));\r\n\r\nfunction determineNetwork() {\r\n    if (window.localStorage.getItem('chain') == 'ETH') {\r\n      return ' ETH'\r\n    } else {\r\n        return ' BNB'\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState('name');\r\n  \r\n  async function getName() {\r\n    let token = document.getElementById('from-address').value;\r\n    console.log(token);\r\n    let name = await Contracts.getTokenName(token);\r\n    console.log(name);\r\n    setName(name);\r\n  }\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          My {determineNetwork()}:\r\n        </Typography>\r\n        \r\n        <Box className={classes.rootBox}>\r\n            <Paper variant=\"outlined\" className={classes.paperStyle}>\r\n                <Typography className={classes.leadText} color=\"textPrimary\">\r\n                    From\r\n                </Typography>\r\n                <TextField id=\"standard-basic\" label=\"Enter Amount\" className={classes.numInput} />\r\n                <div className={classes.bnbLogo}>\r\n                    <Typography className={classes.bnbText} >\r\n                        {determineNetwork()}\r\n                    </Typography>\r\n                    {determineNetwork() == ' ETH' ?\r\n                        <img className={classes.fromLogo} src=\"/images/eth.png\"></img>\r\n                        :\r\n                        <img className={classes.fromLogo} src=\"/images/bnb.png\"></img>\r\n                    }\r\n                </div>\r\n            </Paper>\r\n        </Box>\r\n\r\n        <Box className={classes.rootBox}>\r\n            <Paper variant=\"outlined\" className={classes.paperStyle}>\r\n                <Typography className={classes.leadText} color=\"textPrimary\">\r\n                    To\r\n                </Typography>\r\n                <TextField onChange={() => getName()} id=\"from-address\" label=\"Enter Address\" className={classes.numInput} />\r\n                <Button className={classes.symbol} variant=\"outlined\">{name}</Button>\r\n            </Paper>\r\n        </Box>\r\n\r\n        <TextField id=\"outlined-basic\" className={classes.slippage} label=\"Set Slippage %\" type=\"number\" variant=\"outlined\" />\r\n        <Button className={classes.approveSpend} variant=\"contained\" color=\"primary\">\r\n            Swap\r\n        </Button>\r\n      </CardContent>\r\n      <CardActions>\r\n\r\n      </CardActions>\r\n    </Card>\r\n    \r\n  );\r\n}\r\n"],"sourceRoot":""}