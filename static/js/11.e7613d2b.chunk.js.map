{"version":3,"sources":["@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@jumbo/components/PageComponents/layouts/PageContainer.js","routes/Dashboards/Pools/Crypto/BitcoinPurchaseHistory/BitcoinGraph.js","routes/Dashboards/Pools/Crypto/BitcoinPurchaseHistory/index.js","routes/Dashboards/Pools/Crypto/index.js"],"names":["useStyles","makeStyles","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","heading","breadcrumbComponent","children","rest","classes","Box","className","clsx","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","items","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","root","flexWrap","contentArea","width","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","pageFull","PageContainer","breadcrumbs","restProps","Slide","in","direction","mountOnEnter","unmountOnExit","tooltip","borderRadius","padding","backgroundColor","palette","common","white","margin","spacing","marginLeft","determineNetwork","window","localStorage","getItem","BitcoinPurchaseHistory","data","balance","title","amount","Formatter","getRoundedBalance","String","progress","value","icon","gutterBottom","Button","href","CryptoDashboard","useState","poolAddresses","setPoolAddresses","poolHoldings","setPoolHoldings","poolProfits","setPoolProfits","useEffect","a","Contracts","getAllSelfPools","loadData","GridContainer","arr","i","length","poolInfo","push","Grid","loadPools"],"mappings":"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","file":"static/js/11.e7613d2b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst crypto = {\r\n  bitcoin: [\r\n    { month: 'Jan', price: 200 },\r\n    { month: 'Feb', price: 300 },\r\n    { month: 'Mar', price: 550 },\r\n    { month: 'Apr', price: 500 },\r\n    { month: 'May', price: 700 },\r\n    { month: 'Jun', price: 450 },\r\n    { month: 'Jul', price: 770 },\r\n    { month: 'Aug', price: 900 },\r\n  ],\r\n  etherium: [\r\n    { month: 'Jan', price: 450 },\r\n    { month: 'Feb', price: 300 },\r\n    { month: 'Mar', price: 1350 },\r\n    { month: 'Apr', price: 275 },\r\n    { month: 'May', price: 500 },\r\n    { month: 'Jun', price: 250 },\r\n    { month: 'Jul', price: 900 },\r\n    { month: 'Aug', price: 550 },\r\n  ],\r\n  litCoin: [\r\n    { month: 'Jan', price: 1500 },\r\n    { month: '', price: 400 },\r\n    { month: 'Feb', price: 2000 },\r\n    { month: 'Mar', price: 1200 },\r\n    { month: 'Apr', price: 2200 },\r\n    { month: 'May', price: 2600 },\r\n    { month: 'Jun', price: 4300 },\r\n    { month: 'July', price: 2900 },\r\n    { month: 'Aug', price: 3800 },\r\n    { month: 'Sep', price: 1500 },\r\n  ],\r\n  ripple: [\r\n    { month: 'Jan', price: 1500 },\r\n    { month: '', price: 400 },\r\n    { month: 'Feb', price: 2000 },\r\n    { month: 'Mar', price: 1200 },\r\n    { month: 'Apr', price: 2200 },\r\n    { month: 'May', price: 2600 },\r\n    { month: 'Jun', price: 4300 },\r\n    { month: 'July', price: 2900 },\r\n    { month: 'Aug', price: 3800 },\r\n    { month: 'Sep', price: 1500 },\r\n  ],\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#8d46ef',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\nconst BitcoinGraph = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ResponsiveContainer className={classes.root} width=\"100%\" height={112}>\r\n      <AreaChart data={crypto.bitcoin} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? <Box className={classes.tooltip}>${data.payload[0].payload.price}</Box> : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area dataKey=\"price\" strokeWidth={0} stackId=\"2\" stroke=\"#6200EE\" fill=\"url(#color3)\" fillOpacity={1} />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default BitcoinGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../../@jumbo/components/Common';\r\nimport BitcoinGraph from './BitcoinGraph';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Contracts, Formatter} from '../../../../../utils/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  padding: {\r\n    marginLeft: '25px'\r\n  }\r\n}));\r\n\r\nfunction determineNetwork() {\r\n  if (window.localStorage.getItem('chain') == 'ETH') {\r\n    return ' ETH'\r\n  } else {\r\n      return ' BNB'\r\n  }\r\n}\r\n\r\nfunction formatBalance(balance) {\r\n  if (balance) {\r\n    balance = Formatter.getRoundedBalance(String(balance));\r\n  }\r\n  return balance;\r\n}\r\n\r\nconst BitcoinPurchaseHistory = (data) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CryptoCard title=\"Pool Name: \" amount={formatBalance(data['poolInfo'][1]) + determineNetwork()} progress={{ value: '0%', icon: 'info', color: '#8DCD03' }}>\r\n      {/* <BitcoinGraph /> */}\r\n      <Typography className={classes.padding} variant=\"h4\" gutterBottom>\r\n        Total Profits: {data['poolInfo'][2]} {determineNetwork()}\r\n      </Typography>\r\n      <Button href={\"https://nyan.finance/pool/\" + data['poolInfo'][0]} className={classes.padding} variant=\"contained\" color=\"primary\" >\r\n        View Pool\r\n      </Button>\r\n    </CryptoCard>\r\n  );\r\n};\r\n\r\nexport default BitcoinPurchaseHistory;\r\n","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport BitcoinPurchaseHistory from './BitcoinPurchaseHistory';\r\nimport GridContainer from '../../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { useEffect } from 'reactn';\r\nimport {Contracts, Formatter} from '../../../../utils/index';\r\n\r\n\r\nconst breadcrumbs = [\r\n  { label: 'Home', link: '/' },\r\n  { label: 'Dashboard', link: '/dashboard' },\r\n  { label: 'Pools', isActive: true },\r\n];\r\n\r\nfunction loadPools(poolAddresses, poolHoldings, poolProfits) {\r\n  let arr = []\r\n  for (let i = 0; i < poolAddresses.length; i++) {\r\n    let poolInfo = [];\r\n    poolInfo.push(poolAddresses[i]);\r\n    poolInfo.push(poolHoldings[i]);\r\n    poolInfo.push(poolProfits[i]);\r\n    arr.push(\r\n      <Grid item xs={12} sm={6} md={3}>\r\n        <BitcoinPurchaseHistory poolInfo={poolInfo} />\r\n      </Grid>\r\n    );\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst CryptoDashboard = () => {\r\n  const [poolAddresses, setPoolAddresses] = useState([]);\r\n  const [poolHoldings, setPoolHoldings] = useState([]);\r\n  const [poolProfits, setPoolProfits] = useState([]);\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      let data = await Contracts.getAllSelfPools();\r\n      setPoolAddresses(data[0]);\r\n      setPoolHoldings(data[1]);\r\n      setPoolProfits(data[2]);\r\n    }\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <PageContainer heading=\"Available Pools\" breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        {loadPools(poolAddresses, poolHoldings, poolProfits)}\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CryptoDashboard;\r\n"],"sourceRoot":""}